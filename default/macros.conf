[lookup_technique_tactic_from_rule_name]
definition = lookup mitre_all_rule_technique_lookup.csv rule_name \
| makemv tokenizer="([^\n\s]+)" technique_id\
| mvexpand technique_id\
| lookup mitre_tt_lookup.csv technique_id\
| fields *\
| mvexpand technique_name\
| dedup rule_name, technique_id
iseval = 0

[mitre_rules_from_alerts]
definition = search `all_alerts` \
| eval rule_name=alert, technique_id='annotations.mitre_attack.mitre_technique_id' \
| lookup mitre_all_rule_technique_lookup rule_name OUTPUTNEW technique_id as lookup_technique_id \
| eval technique_id=mvdedup(mvappend(lookup_technique_id, technique_id)) \
| mvexpand technique_id \
| lookup urgency_score_lookup urgency \
| lookup mitre_tt_lookup technique_id \
| eval technique_name=mvdedup(technique_name)
iseval = 0

[mitre_rules_from_notable]
definition = `notable` \
| eval rule_name=search_name, technique_id='annotations.mitre_attack.mitre_technique_id' \
| lookup mitre_all_rule_technique_lookup rule_name OUTPUTNEW technique_id as lookup_technique_id \
| eval technique_id=mvdedup(mvappend(lookup_technique_id, technique_id)) \
| mvexpand technique_id \
| lookup urgency_score_lookup urgency \
| lookup mitre_tt_lookup technique_id \
| eval technique_name=mvdedup(technique_name)
iseval = 0


##############################################################
# If you do NOT have Enterprise Security Application
# Please comment out the definition with notable and enable
# definition = `mitre_rules_from_alerts`
# Also, you will need to set mitre_use_es definition to "0"
##############################################################
[mitre_rules]
#definition = `mitre_rules_from_alerts`
definition = `mitre_rules_from_notable`
iseval = 0

[mitre_use_es]
#definition = "0"
definition = "1"
iseval = 1
